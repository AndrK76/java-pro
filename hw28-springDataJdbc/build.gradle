plugins {
    id 'java'
    id 'org.springframework.boot'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation("org.webjars:webjars-locator-core")
    //implementation("org.webjars:bootstrap:${Versions.bootstrap}")
    implementation("org.webjars.npm:bootstrap:${Versions.bootstrap_npm}")
    implementation("org.webjars:jquery:${Versions.jquery}")

    //implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation("com.google.code.gson:gson")

    //runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}